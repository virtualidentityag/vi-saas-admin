name: Publish Docker image

on:
  push:
    tags:
      - "dockerImage.v.*"

jobs:
  build:
    name: Build
    if: "!contains(github.event.head_commit.author, 'action@github.com')"
    runs-on: ubuntu-latest
    steps:
      - name: set env
        run: echo BRANCH=$(echo -n "${GITHUB_REF#refs/heads/}") >> $GITHUB_ENV
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2
        with:
          node-version: 14.18.3
      - run: npm i
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
      - name: build
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
      - uses: actions/upload-artifact@v2
        with:
          name: buildfiles
          path: build/**/*
  push_to_registry:
    needs: [build]
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download buildfiles artifact
        uses: actions/download-artifact@v2
        with:
          name: buildfiles
      - name: Prepare Docker variables
        run: |
          echo "DOCKER_REGISTRY=$(echo "docker.pkg.github.com/${{ github.repository }}" | awk '{print tolower($0)}')" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=$(echo "${{ github.repository }}" | awk -F / '{print tolower($2)}')" >> $GITHUB_ENV
        shell: bash
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1.1.1
        with:
          username: ${{ secrets.GH_PACKAGE_RELEASE_USER }}
          password: ${{ secrets.GH_PACKAGE_RELEASE_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}
          repository: ${{ env.DOCKER_IMAGE }}
          tag_with_ref: true
  push_to_ghcr_registry:
    needs: [build]
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download buildfiles artifact
        uses: actions/download-artifact@v2
        with:
          name: buildfiles
      - name: Prepare Docker variables
        run: |
          echo "DOCKER_REGISTRY=$(echo "ghcr.io/${{ github.repository }}" | awk '{print tolower($0)}')" >> $GITHUB_ENV
          echo "DOCKER_IMAGE=$(echo "${{ github.repository }}" | awk -F / '{print tolower($2)}')" >> $GITHUB_ENV
        shell: bash
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1.1.1
        with:
          username: ${{ secrets.GH_PACKAGE_RELEASE_USER }}
          password: ${{ secrets.GH_PACKAGE_RELEASE_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}
          repository: ${{ env.DOCKER_IMAGE }}
          tag_with_ref: true
